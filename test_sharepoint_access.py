#!/usr/bin/env python3
"""
Script de test pour la fonction de listing rapide SharePoint
Permet de tester l'acc√®s et la navigation dans SharePoint
"""

import os
import sys
from pathlib import Path

# Ajouter le r√©pertoire parent au PATH pour les imports
sys.path.append(str(Path(__file__).parent.parent))

try:
    from scripts.identify_relevant_files_sharepoint import SharePointClient
    print("‚úÖ Module SharePoint import√© avec succ√®s")
except ImportError as e:
    print(f"‚ùå Erreur d'import : {e}")
    print("Assurez-vous que les d√©pendances SharePoint sont install√©es :")
    print("pip install -r requirements_sharepoint.txt")
    sys.exit(1)

def test_sharepoint_access():
    """Test d'acc√®s SharePoint avec la fonction de listing rapide"""
    
    print("üß™ Test d'acc√®s SharePoint - Listing rapide")
    print("=" * 50)
    
    # V√©rifier les variables d'environnement
    required_vars = ['TENANT_ID', 'CLIENT_ID', 'CLIENT_SECRET', 'GRAPH_DRIVE_ID']
    missing_vars = [var for var in required_vars if not os.getenv(var)]
    
    if missing_vars:
        print(f"‚ùå Variables d'environnement manquantes : {', '.join(missing_vars)}")
        print("Veuillez configurer le fichier .env avec :")
        for var in missing_vars:
            print(f"  {var}=votre-valeur")
        return False
    
    print("‚úÖ Variables d'environnement configur√©es")
    
    # Cr√©er le client SharePoint
    try:
        client = SharePointClient()
        print("‚úÖ Client SharePoint cr√©√©")
    except Exception as e:
        print(f"‚ùå Erreur lors de la cr√©ation du client : {e}")
        return False
    
    # Tester diff√©rents dossiers
    test_folders = [
        "/",
        "/Documents partages",
        "/Documents partages/General",
        "/Shared Documents"  # Nom anglais alternatif
    ]
    
    for folder in test_folders:
        print(f"\nüìÅ Test du dossier : {folder}")
        print("-" * 40)
        
        try:
            files = client.list_first_10_files(folder)
            
            if files:
                print(f"‚úÖ Acc√®s r√©ussi ! Trouv√© {len(files)} √©l√©ments :")
                for i, file_info in enumerate(files, 1):
                    type_icon = "üìÅ" if file_info['type'] == 'folder' else "üìÑ"
                    size_str = f"{file_info['size']/1024/1024:.1f} MB" if file_info['size'] > 0 else "-"
                    print(f"  {i:2d}. {type_icon} {file_info['name']} ({size_str})")
                
                # Afficher quelques d√©tails suppl√©mentaires pour le premier √©l√©ment
                if files:
                    first_file = files[0]
                    print(f"\nüìä D√©tails du premier √©l√©ment :")
                    print(f"   ID : {first_file['id']}")
                    print(f"   Chemin : {first_file['path']}")
                    print(f"   Modifi√© : {first_file['modified']}")
                    if first_file.get('web_url'):
                        print(f"   URL Web : {first_file['web_url']}")
                        
            else:
                print("‚ö†Ô∏è Dossier vide ou inaccessible")
                
        except Exception as e:
            print(f"‚ùå Erreur d'acc√®s : {str(e)}")
            
    return True

def test_specific_folder():
    """Test d'un dossier sp√©cifique saisi par l'utilisateur"""
    
    print("\n" + "=" * 50)
    print("üîç Test d'un dossier sp√©cifique")
    print("=" * 50)
    
    folder_path = input("Entrez le chemin du dossier SharePoint √† tester : ").strip()
    if not folder_path:
        folder_path = "/Documents partages"
        print(f"Utilisation du dossier par d√©faut : {folder_path}")
    
    try:
        client = SharePointClient()
        files = client.list_first_10_files(folder_path)
        
        if files:
            print(f"\n‚úÖ Acc√®s r√©ussi au dossier : {folder_path}")
            print(f"üìä Trouv√© {len(files)} √©l√©ments :")
            
            folders = [f for f in files if f['type'] == 'folder']
            documents = [f for f in files if f['type'] == 'file']
            
            if folders:
                print(f"\nüìÅ Dossiers ({len(folders)}) :")
                for folder in folders:
                    print(f"   - {folder['name']}")
                    
            if documents:
                print(f"\nüìÑ Fichiers ({len(documents)}) :")
                for doc in documents:
                    size_str = f"{doc['size']/1024/1024:.1f} MB" if doc['size'] > 0 else "0 MB"
                    print(f"   - {doc['name']} ({size_str})")
                    
        else:
            print(f"‚ö†Ô∏è Aucun √©l√©ment trouv√© dans : {folder_path}")
            
    except Exception as e:
        print(f"‚ùå Erreur lors du test : {str(e)}")

def main():
    """Fonction principale"""
    
    print("üöÄ Test de connectivit√© SharePoint")
    print("Ce script teste la nouvelle fonctionnalit√© de listing rapide")
    print()
    
    # Charger les variables d'environnement
    try:
        from dotenv import load_dotenv
        load_dotenv()
        print("‚úÖ Fichier .env charg√©")
    except ImportError:
        print("‚ö†Ô∏è python-dotenv non install√©, utilisation des variables syst√®me")
    
    # Test d'acc√®s automatique
    if not test_sharepoint_access():
        print("\n‚ùå √âchec des tests automatiques")
        return
    
    # Proposer un test manuel
    print("\n" + "=" * 50)
    choice = input("Voulez-vous tester un dossier sp√©cifique ? (o/n) : ").strip().lower()
    if choice in ['o', 'oui', 'y', 'yes']:
        test_specific_folder()
    
    print("\n‚úÖ Tests termin√©s !")
    print("\nPour utiliser cette fonctionnalit√© dans vos scripts :")
    print("from scripts.identify_relevant_files_sharepoint import SharePointClient")
    print("client = SharePointClient()")
    print("files = client.list_first_10_files('/Documents partages')")

if __name__ == "__main__":
    main()
